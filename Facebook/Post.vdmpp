class Post

	types
		public String = seq of char;
		public Date::day : nat
								 month : nat
						     year : nat;		
		
		
	values
	-- TODO Define values here

	instance variables
		
		public text: String;
		public author: User;
		public viewers: set of User := {};
		
		public static postID : int := 0;
		public ID : int := postID;
		
	operations
		
	-- Post Constructor
		public Post: String * User ==> Post
		Post(postText, postAuthor) == (
			text := postText;
			author := postAuthor;
			
			ID := postID;
			postID := postID + 1;
			return self
		);
		
	-- Post Constructor
		public Post: String  ==> Post
		Post(postText) == (
			text := postText;
			
			ID := postID;
			postID := postID + 1;
			return self
		);


		
	-- Returns Post Content
	public pure getText : () ==> String
	getText() == return text;
	
	
	-- Returns List of Users who can view the Post
	public pure getViewers : () ==> set of User
	getViewers() == return viewers;
	
	-- Returns the Author of the Post
	public pure getAuthor : () ==> User
	getAuthor() == return author;
	
	-- Returns ID of the post
	public pure getPostID : () ==> nat
	getPostID() == return ID;
	
	
	-- Adds User to the group of users that will receive the Post on their feed
	public addUser: User ==> ()
	addUser(user) == viewers := viewers union {user}	
	pre user not in set viewers
	post viewers = viewers~ union {user};

 --Removes User from the group of users that will receive the Post on their feed 
public removeUser: User ==> ()
	removeUser(user) == viewers := viewers \ {user}
	pre user in set viewers and
			card viewers > 1
	post viewers = viewers~ \ {user};

	
	
	


	functions
	-- TODO Define functiones here

	traces
	-- TODO Define Combinatorial Test Traces here

end Post
