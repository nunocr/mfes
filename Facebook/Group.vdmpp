class Group

types
	public String = seq of char;
	
values
instance variables

	public name: String;
	public usersList: set of User := {};

operations

-- Group Constructor just name

	public Group: String ==> Group
	Group(groupName) == (
		name := groupName;
		usersList := {};
		return self
	);

-- Group Constructor name + list

public Group: String * set of User ==> Group
	Group(groupName, users) == (
		name := groupName;
		usersList := users;
		return self
	);



public addUser: User ==> ()
	addUser(user) == usersList := usersList union {user}
	
	pre user not in set usersList
	post usersList = usersList~ union {user};



public removeUser: User ==> ()
	removeUser(user) == usersList := usersList \ {user}
	pre user in set usersList and
			card usersList > 1
	post usersList = usersList~ \ {user};


	
functions
-- TODO Define functiones here

traces
-- TODO Define Combinatorial Test Traces here

end Group